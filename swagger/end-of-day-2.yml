openapi: 3.0.3
info:
  title: My API
  version: '1.0'
  description: Best API ever
  termsOfService: https://www.example.com
  contact:
    email: ashish@datacouch.io
    name: Ashish
    url: https://www.example.com/ashish
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: https://my-json-server.typicode.com/typicode/demo
    variables: {}
    description: Demo Server
  - url: https://my-json-server.typicode.com/bearc0025/api
    variables: {}
    description: My Dev server
  - url: http://localhost:3000
    variables: {}
    description: Local Server
paths:
  /users:
    summary: user level operations
    description: create and read users
    get:
      summary: fetch users
      description: reads user from server
      operationId: fetchUsers
      tags:
        - users
      responses:
        2XX:
          $ref: '#/components/responses/UserArrayResponseBody'
    post:
      summary: creates a user
      description: stores user on server
      operationId: createUser
      requestBody:
        $ref: '#/components/requestBodies/UserPostBody'
      responses:
        '201':
          $ref: '#/components/responses/UserRespBody'
      tags:
        - users
  /posts:
    summary: Posts operations
    description: create and view posts
    get:
      summary: fetch posts
      description: reads posts from the server
      operationId: fetchPosts
      responses:
        2XX:
          description: successful fetch
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: number
                    example: 1
                  title:
                    type: string
                    example: Post 1

components:
  responses:
    UserArrayResponseBody:
      description: user array response
      content:
        application/json:
          schema:
            $ref : '#/components/schemas/UserArray'
    UserRespBody:
      description: new user response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FullUser'
  requestBodies:
    UserPostBody:
      description: new user request
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PostNewUser'
  schemas:
    UserArray:
      type: array
      items:
        $ref: '#/components/schemas/FullUser'
    FullUser:
      allOf: 
      - $ref: '#/components/schemas/PostNewUser'
      - type: object
        properties:
          id:
            type: string
            example: abc
    PostNewUser:
      type: object
      properties:
        username:
          type: string
          example: bear
        score:
          type: integer
          example: 55
        active:
          type: boolean
          example: true


